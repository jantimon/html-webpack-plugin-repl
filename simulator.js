(self.webpackChunkhtml_webpack_plugin_repl=self.webpackChunkhtml_webpack_plugin_repl||[]).push([[504],{8150:(t,e,n)=>{"use strict";n.r(e),n.d(e,{getFormattedHtml:()=>i});const s=(t,e=!1)=>{const n=(t,...n)=>({tap:(s,...i)=>{const o=(0,i[i.length-1])(...n);e&&console.info("=> tap",t,s,o)},tapAsync:(s,...i)=>{const o=i[i.length-1].apply(null,n.concat((n=>{e&&console.info("=> tapAsync Callback",t,s,n)})));e&&console.info("=> tapAsync",t,s,o)}});let s={outputOptions:{publicPath:"/"},assets:[],entrypoints:{keys:()=>["main"],get:()=>({getFiles:()=>["main.js","main.css"]})},getAssetPath:t=>t,errors:{push:console.error},emitAsset:(n,s)=>{e&&console.info("emitAsset",n,s),t(n,s)}};return s.hooks={optimizeTree:n("optimizeTree",[],[]),processAssets:n("processAssets",s),additionalAssets:n("additionalAssets")},{context:"/",options:{entry:{main:"./src/index.js"}},webpack:{Compilation:{PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE:0},sources:{RawSource:class{constructor(t){this.value=t}}}},hooks:{initialize:n("initialize"),make:n("make",s),thisCompilation:n("thisCompilation",s)}}};async function i(t={}){const e=n.e(994).then(n.t.bind(n,7994,23)),i=await async function(t={}){const e=(await Promise.all([n.e(668),n.e(723)]).then(n.t.bind(n,2668,23))).default,i={templateContent:({htmlWebpackPlugin:t})=>`<!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset="utf-8">\n        <title>${t.options.title}</title>\n      </head>\n      <body>\n      </body>\n    </html>`,...t,minify:!1};delete i.template;const o=new e(i);return new Promise((t=>{o.apply(s(((e,n)=>{t({name:e,value:n.value})})))}))}(t);return(0,(await e).default)(i.value)}}}]);